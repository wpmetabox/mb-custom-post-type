(()=>{var e={517:(e,t,o)=>{"use strict";const a=o(290),n=["__proto__","prototype","constructor"];function r(e){const t=e.split("."),o=[];for(let e=0;e<t.length;e++){let a=t[e];for(;"\\"===a[a.length-1]&&void 0!==t[e+1];)a=a.slice(0,-1)+".",a+=t[++e];o.push(a)}return o.some((e=>n.includes(e)))?[]:o}e.exports={get(e,t,o){if(!a(e)||"string"!=typeof t)return void 0===o?e:o;const n=r(t);if(0!==n.length){for(let t=0;t<n.length;t++){if(!Object.prototype.propertyIsEnumerable.call(e,n[t]))return o;if(null==(e=e[n[t]])){if(t!==n.length-1)return o;break}}return e}},set(e,t,o){if(!a(e)||"string"!=typeof t)return e;const n=e,s=r(t);for(let t=0;t<s.length;t++){const n=s[t];a(e[n])||(e[n]={}),t===s.length-1&&(e[n]=o),e=e[n]}return n},delete(e,t){if(!a(e)||"string"!=typeof t)return!1;const o=r(t);for(let t=0;t<o.length;t++){const n=o[t];if(t===o.length-1)return delete e[n],!0;if(e=e[n],!a(e))return!1}},has(e,t){if(!a(e)||"string"!=typeof t)return!1;const o=r(t);if(0===o.length)return!1;for(let t=0;t<o.length;t++){if(!a(e))return!1;if(!(o[t]in e))return!1;e=e[o[t]]}return!0}}},290:e=>{"use strict";e.exports=e=>{const t=typeof e;return null!==e&&("object"===t||"function"===t)}},656:(e,t,o)=>{"use strict";function a(){return a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var o=arguments[t];for(var a in o)Object.prototype.hasOwnProperty.call(o,a)&&(e[a]=o[a])}return e},a.apply(this,arguments)}function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}var r,s=(r=function(e,t){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var o in t)t.hasOwnProperty(o)&&(e[o]=t[o])},r(e,t)},function(e,t){function o(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)});t.Rt=void 0;var i,l=o(363),c="undefined"==typeof navigator||!0===o.g.PREVENT_CODEMIRROR_RENDER;c||(i=o(192));var p=function(){function e(){}return e.equals=function(e,t){var o=this,a=Object.keys,r=n(e),s=n(t);return e&&t&&"object"===r&&r===s?a(e).length===a(t).length&&a(e).every((function(a){return o.equals(e[a],t[a])})):e===t},e}(),m=function(){function e(e,t){this.editor=e,this.props=t}return e.prototype.delegateCursor=function(e,t,o){var a=this.editor.getDoc();o&&this.editor.focus(),t?a.setCursor(e):a.setCursor(e,null,{scroll:!1})},e.prototype.delegateScroll=function(e){this.editor.scrollTo(e.x,e.y)},e.prototype.delegateSelection=function(e,t){this.editor.getDoc().setSelections(e),t&&this.editor.focus()},e.prototype.apply=function(e){e&&e.selection&&e.selection.ranges&&this.delegateSelection(e.selection.ranges,e.selection.focus||!1),e&&e.cursor&&this.delegateCursor(e.cursor,e.autoScroll||!1,this.editor.getOption("autofocus")||!1),e&&e.scroll&&this.delegateScroll(e.scroll)},e.prototype.applyNext=function(e,t,o){e&&e.selection&&e.selection.ranges&&t&&t.selection&&t.selection.ranges&&!p.equals(e.selection.ranges,t.selection.ranges)&&this.delegateSelection(t.selection.ranges,t.selection.focus||!1),e&&e.cursor&&t&&t.cursor&&!p.equals(e.cursor,t.cursor)&&this.delegateCursor(o.cursor||t.cursor,t.autoScroll||!1,t.autoCursor||!1),e&&e.scroll&&t&&t.scroll&&!p.equals(e.scroll,t.scroll)&&this.delegateScroll(t.scroll)},e.prototype.applyUserDefined=function(e,t){t&&t.cursor&&this.delegateCursor(t.cursor,e.autoScroll||!1,this.editor.getOption("autofocus")||!1)},e.prototype.wire=function(e){var t=this;Object.keys(e||{}).filter((function(e){return/^on/.test(e)})).forEach((function(e){switch(e){case"onBlur":t.editor.on("blur",(function(e,o){t.props.onBlur(t.editor,o)}));break;case"onContextMenu":t.editor.on("contextmenu",(function(e,o){t.props.onContextMenu(t.editor,o)}));break;case"onCopy":t.editor.on("copy",(function(e,o){t.props.onCopy(t.editor,o)}));break;case"onCursor":t.editor.on("cursorActivity",(function(e){t.props.onCursor(t.editor,t.editor.getDoc().getCursor())}));break;case"onCursorActivity":t.editor.on("cursorActivity",(function(e){t.props.onCursorActivity(t.editor)}));break;case"onCut":t.editor.on("cut",(function(e,o){t.props.onCut(t.editor,o)}));break;case"onDblClick":t.editor.on("dblclick",(function(e,o){t.props.onDblClick(t.editor,o)}));break;case"onDragEnter":t.editor.on("dragenter",(function(e,o){t.props.onDragEnter(t.editor,o)}));break;case"onDragLeave":t.editor.on("dragleave",(function(e,o){t.props.onDragLeave(t.editor,o)}));break;case"onDragOver":t.editor.on("dragover",(function(e,o){t.props.onDragOver(t.editor,o)}));break;case"onDragStart":t.editor.on("dragstart",(function(e,o){t.props.onDragStart(t.editor,o)}));break;case"onDrop":t.editor.on("drop",(function(e,o){t.props.onDrop(t.editor,o)}));break;case"onFocus":t.editor.on("focus",(function(e,o){t.props.onFocus(t.editor,o)}));break;case"onGutterClick":t.editor.on("gutterClick",(function(e,o,a,n){t.props.onGutterClick(t.editor,o,a,n)}));break;case"onInputRead":t.editor.on("inputRead",(function(e,o){t.props.onInputRead(t.editor,o)}));break;case"onKeyDown":t.editor.on("keydown",(function(e,o){t.props.onKeyDown(t.editor,o)}));break;case"onKeyHandled":t.editor.on("keyHandled",(function(e,o,a){t.props.onKeyHandled(t.editor,o,a)}));break;case"onKeyPress":t.editor.on("keypress",(function(e,o){t.props.onKeyPress(t.editor,o)}));break;case"onKeyUp":t.editor.on("keyup",(function(e,o){t.props.onKeyUp(t.editor,o)}));break;case"onMouseDown":t.editor.on("mousedown",(function(e,o){t.props.onMouseDown(t.editor,o)}));break;case"onPaste":t.editor.on("paste",(function(e,o){t.props.onPaste(t.editor,o)}));break;case"onRenderLine":t.editor.on("renderLine",(function(e,o,a){t.props.onRenderLine(t.editor,o,a)}));break;case"onScroll":t.editor.on("scroll",(function(e){t.props.onScroll(t.editor,t.editor.getScrollInfo())}));break;case"onSelection":t.editor.on("beforeSelectionChange",(function(e,o){t.props.onSelection(t.editor,o)}));break;case"onTouchStart":t.editor.on("touchstart",(function(e,o){t.props.onTouchStart(t.editor,o)}));break;case"onUpdate":t.editor.on("update",(function(e){t.props.onUpdate(t.editor)}));break;case"onViewportChange":t.editor.on("viewportChange",(function(e,o,a){t.props.onViewportChange(t.editor,o,a)}))}}))},e}();!function(e){function t(t){var o=e.call(this,t)||this;return c||(o.applied=!1,o.appliedNext=!1,o.appliedUserDefined=!1,o.deferred=null,o.emulating=!1,o.hydrated=!1,o.initCb=function(){o.props.editorDidConfigure&&o.props.editorDidConfigure(o.editor)},o.mounted=!1),o}s(t,e),t.prototype.hydrate=function(e){var t=this,o=e&&e.options?e.options:{},n=a({},i.defaults,this.editor.options,o);Object.keys(n).some((function(e){return t.editor.getOption(e)!==n[e]}))&&Object.keys(n).forEach((function(e){o.hasOwnProperty(e)&&t.editor.getOption(e)!==n[e]&&(t.editor.setOption(e,n[e]),t.mirror.setOption(e,n[e]))})),this.hydrated||(this.deferred?this.resolveChange(e.value):this.initChange(e.value||"")),this.hydrated=!0},t.prototype.initChange=function(e){this.emulating=!0;var t=this.editor.getDoc(),o=t.lastLine(),a=t.getLine(t.lastLine()).length;t.replaceRange(e||"",{line:0,ch:0},{line:o,ch:a}),this.mirror.setValue(e),t.clearHistory(),this.mirror.clearHistory(),this.emulating=!1},t.prototype.resolveChange=function(e){this.emulating=!0;var t=this.editor.getDoc();if("undo"===this.deferred.origin?t.undo():"redo"===this.deferred.origin?t.redo():t.replaceRange(this.deferred.text,this.deferred.from,this.deferred.to,this.deferred.origin),e&&e!==t.getValue()){var o=t.getCursor();t.setValue(e),t.setCursor(o)}this.emulating=!1,this.deferred=null},t.prototype.mirrorChange=function(e){var t=this.editor.getDoc();return"undo"===e.origin?(t.setHistory(this.mirror.getHistory()),this.mirror.undo()):"redo"===e.origin?(t.setHistory(this.mirror.getHistory()),this.mirror.redo()):this.mirror.replaceRange(e.text,e.from,e.to,e.origin),this.mirror.getValue()},t.prototype.componentDidMount=function(){var e=this;c||(this.props.defineMode&&this.props.defineMode.name&&this.props.defineMode.fn&&i.defineMode(this.props.defineMode.name,this.props.defineMode.fn),this.editor=i(this.ref,this.props.options),this.shared=new m(this.editor,this.props),this.mirror=i((function(){}),this.props.options),this.editor.on("electricInput",(function(){e.mirror.setHistory(e.editor.getDoc().getHistory())})),this.editor.on("cursorActivity",(function(){e.mirror.setCursor(e.editor.getDoc().getCursor())})),this.editor.on("beforeChange",(function(t,o){if(!e.emulating){o.cancel(),e.deferred=o;var a=e.mirrorChange(e.deferred);e.props.onBeforeChange&&e.props.onBeforeChange(e.editor,e.deferred,a)}})),this.editor.on("change",(function(t,o){e.mounted&&e.props.onChange&&e.props.onChange(e.editor,o,e.editor.getValue())})),this.hydrate(this.props),this.shared.apply(this.props),this.applied=!0,this.mounted=!0,this.shared.wire(this.props),this.editor.getOption("autofocus")&&this.editor.focus(),this.props.editorDidMount&&this.props.editorDidMount(this.editor,this.editor.getValue(),this.initCb))},t.prototype.componentDidUpdate=function(e){if(!c){var t={cursor:null};this.props.value!==e.value&&(this.hydrated=!1),this.props.autoCursor||void 0===this.props.autoCursor||(t.cursor=this.editor.getDoc().getCursor()),this.hydrate(this.props),this.appliedNext||(this.shared.applyNext(e,this.props,t),this.appliedNext=!0),this.shared.applyUserDefined(e,t),this.appliedUserDefined=!0}},t.prototype.componentWillUnmount=function(){c||this.props.editorWillUnmount&&this.props.editorWillUnmount(i)},t.prototype.shouldComponentUpdate=function(e,t){return!c},t.prototype.render=function(){var e=this;if(c)return null;var t=this.props.className?"react-codemirror2 "+this.props.className:"react-codemirror2";return l.createElement("div",{className:t,ref:function(t){return e.ref=t}})}}(l.Component);var u=function(e){function t(t){var o=e.call(this,t)||this;return c||(o.applied=!1,o.appliedUserDefined=!1,o.continueChange=!1,o.detached=!1,o.hydrated=!1,o.initCb=function(){o.props.editorDidConfigure&&o.props.editorDidConfigure(o.editor)},o.mounted=!1,o.onBeforeChangeCb=function(){o.continueChange=!0}),o}return s(t,e),t.prototype.hydrate=function(e){var t=this,o=e&&e.options?e.options:{},n=a({},i.defaults,this.editor.options,o);if(Object.keys(n).some((function(e){return t.editor.getOption(e)!==n[e]}))&&Object.keys(n).forEach((function(e){o.hasOwnProperty(e)&&t.editor.getOption(e)!==n[e]&&t.editor.setOption(e,n[e])})),!this.hydrated){var r=this.editor.getDoc(),s=r.lastLine(),l=r.getLine(r.lastLine()).length;r.replaceRange(e.value||"",{line:0,ch:0},{line:s,ch:l})}this.hydrated=!0},t.prototype.componentDidMount=function(){var e=this;c||(this.detached=!0===this.props.detach,this.props.defineMode&&this.props.defineMode.name&&this.props.defineMode.fn&&i.defineMode(this.props.defineMode.name,this.props.defineMode.fn),this.editor=i(this.ref,this.props.options),this.shared=new m(this.editor,this.props),this.editor.on("beforeChange",(function(t,o){e.props.onBeforeChange&&e.props.onBeforeChange(e.editor,o,e.editor.getValue(),e.onBeforeChangeCb)})),this.editor.on("change",(function(t,o){e.mounted&&e.props.onChange&&(e.props.onBeforeChange?e.continueChange&&e.props.onChange(e.editor,o,e.editor.getValue()):e.props.onChange(e.editor,o,e.editor.getValue()))})),this.hydrate(this.props),this.shared.apply(this.props),this.applied=!0,this.mounted=!0,this.shared.wire(this.props),this.editor.getDoc().clearHistory(),this.props.editorDidMount&&this.props.editorDidMount(this.editor,this.editor.getValue(),this.initCb))},t.prototype.componentDidUpdate=function(e){if(this.detached&&!1===this.props.detach&&(this.detached=!1,e.editorDidAttach&&e.editorDidAttach(this.editor)),this.detached||!0!==this.props.detach||(this.detached=!0,e.editorDidDetach&&e.editorDidDetach(this.editor)),!c&&!this.detached){var t={cursor:null};this.props.value!==e.value&&(this.hydrated=!1,this.applied=!1,this.appliedUserDefined=!1),e.autoCursor||void 0===e.autoCursor||(t.cursor=this.editor.getDoc().getCursor()),this.hydrate(this.props),this.applied||(this.shared.apply(e),this.applied=!0),this.appliedUserDefined||(this.shared.applyUserDefined(e,t),this.appliedUserDefined=!0)}},t.prototype.componentWillUnmount=function(){c||this.props.editorWillUnmount&&this.props.editorWillUnmount(i)},t.prototype.shouldComponentUpdate=function(e,t){var o=!0;return c&&(o=!1),this.detached&&e.detach&&(o=!1),o},t.prototype.render=function(){var e=this;if(c)return null;var t=this.props.className?"react-codemirror2 "+this.props.className:"react-codemirror2";return l.createElement("div",{className:t,ref:function(t){return e.ref=t}})},t}(l.Component);t.Rt=u},304:function(e){var t;t=function(){var e=JSON.parse('{"$":"dollar","%":"percent","&":"and","<":"less",">":"greater","|":"or","¢":"cent","£":"pound","¤":"currency","¥":"yen","©":"(c)","ª":"a","®":"(r)","º":"o","À":"A","Á":"A","Â":"A","Ã":"A","Ä":"A","Å":"A","Æ":"AE","Ç":"C","È":"E","É":"E","Ê":"E","Ë":"E","Ì":"I","Í":"I","Î":"I","Ï":"I","Ð":"D","Ñ":"N","Ò":"O","Ó":"O","Ô":"O","Õ":"O","Ö":"O","Ø":"O","Ù":"U","Ú":"U","Û":"U","Ü":"U","Ý":"Y","Þ":"TH","ß":"ss","à":"a","á":"a","â":"a","ã":"a","ä":"a","å":"a","æ":"ae","ç":"c","è":"e","é":"e","ê":"e","ë":"e","ì":"i","í":"i","î":"i","ï":"i","ð":"d","ñ":"n","ò":"o","ó":"o","ô":"o","õ":"o","ö":"o","ø":"o","ù":"u","ú":"u","û":"u","ü":"u","ý":"y","þ":"th","ÿ":"y","Ā":"A","ā":"a","Ă":"A","ă":"a","Ą":"A","ą":"a","Ć":"C","ć":"c","Č":"C","č":"c","Ď":"D","ď":"d","Đ":"DJ","đ":"dj","Ē":"E","ē":"e","Ė":"E","ė":"e","Ę":"e","ę":"e","Ě":"E","ě":"e","Ğ":"G","ğ":"g","Ģ":"G","ģ":"g","Ĩ":"I","ĩ":"i","Ī":"i","ī":"i","Į":"I","į":"i","İ":"I","ı":"i","Ķ":"k","ķ":"k","Ļ":"L","ļ":"l","Ľ":"L","ľ":"l","Ł":"L","ł":"l","Ń":"N","ń":"n","Ņ":"N","ņ":"n","Ň":"N","ň":"n","Ō":"O","ō":"o","Ő":"O","ő":"o","Œ":"OE","œ":"oe","Ŕ":"R","ŕ":"r","Ř":"R","ř":"r","Ś":"S","ś":"s","Ş":"S","ş":"s","Š":"S","š":"s","Ţ":"T","ţ":"t","Ť":"T","ť":"t","Ũ":"U","ũ":"u","Ū":"u","ū":"u","Ů":"U","ů":"u","Ű":"U","ű":"u","Ų":"U","ų":"u","Ŵ":"W","ŵ":"w","Ŷ":"Y","ŷ":"y","Ÿ":"Y","Ź":"Z","ź":"z","Ż":"Z","ż":"z","Ž":"Z","ž":"z","Ə":"E","ƒ":"f","Ơ":"O","ơ":"o","Ư":"U","ư":"u","ǈ":"LJ","ǉ":"lj","ǋ":"NJ","ǌ":"nj","Ș":"S","ș":"s","Ț":"T","ț":"t","ə":"e","˚":"o","Ά":"A","Έ":"E","Ή":"H","Ί":"I","Ό":"O","Ύ":"Y","Ώ":"W","ΐ":"i","Α":"A","Β":"B","Γ":"G","Δ":"D","Ε":"E","Ζ":"Z","Η":"H","Θ":"8","Ι":"I","Κ":"K","Λ":"L","Μ":"M","Ν":"N","Ξ":"3","Ο":"O","Π":"P","Ρ":"R","Σ":"S","Τ":"T","Υ":"Y","Φ":"F","Χ":"X","Ψ":"PS","Ω":"W","Ϊ":"I","Ϋ":"Y","ά":"a","έ":"e","ή":"h","ί":"i","ΰ":"y","α":"a","β":"b","γ":"g","δ":"d","ε":"e","ζ":"z","η":"h","θ":"8","ι":"i","κ":"k","λ":"l","μ":"m","ν":"n","ξ":"3","ο":"o","π":"p","ρ":"r","ς":"s","σ":"s","τ":"t","υ":"y","φ":"f","χ":"x","ψ":"ps","ω":"w","ϊ":"i","ϋ":"y","ό":"o","ύ":"y","ώ":"w","Ё":"Yo","Ђ":"DJ","Є":"Ye","І":"I","Ї":"Yi","Ј":"J","Љ":"LJ","Њ":"NJ","Ћ":"C","Џ":"DZ","А":"A","Б":"B","В":"V","Г":"G","Д":"D","Е":"E","Ж":"Zh","З":"Z","И":"I","Й":"J","К":"K","Л":"L","М":"M","Н":"N","О":"O","П":"P","Р":"R","С":"S","Т":"T","У":"U","Ф":"F","Х":"H","Ц":"C","Ч":"Ch","Ш":"Sh","Щ":"Sh","Ъ":"U","Ы":"Y","Ь":"","Э":"E","Ю":"Yu","Я":"Ya","а":"a","б":"b","в":"v","г":"g","д":"d","е":"e","ж":"zh","з":"z","и":"i","й":"j","к":"k","л":"l","м":"m","н":"n","о":"o","п":"p","р":"r","с":"s","т":"t","у":"u","ф":"f","х":"h","ц":"c","ч":"ch","ш":"sh","щ":"sh","ъ":"u","ы":"y","ь":"","э":"e","ю":"yu","я":"ya","ё":"yo","ђ":"dj","є":"ye","і":"i","ї":"yi","ј":"j","љ":"lj","њ":"nj","ћ":"c","ѝ":"u","џ":"dz","Ґ":"G","ґ":"g","Ғ":"GH","ғ":"gh","Қ":"KH","қ":"kh","Ң":"NG","ң":"ng","Ү":"UE","ү":"ue","Ұ":"U","ұ":"u","Һ":"H","һ":"h","Ә":"AE","ә":"ae","Ө":"OE","ө":"oe","Ա":"A","Բ":"B","Գ":"G","Դ":"D","Ե":"E","Զ":"Z","Է":"E\'","Ը":"Y\'","Թ":"T\'","Ժ":"JH","Ի":"I","Լ":"L","Խ":"X","Ծ":"C\'","Կ":"K","Հ":"H","Ձ":"D\'","Ղ":"GH","Ճ":"TW","Մ":"M","Յ":"Y","Ն":"N","Շ":"SH","Չ":"CH","Պ":"P","Ջ":"J","Ռ":"R\'","Ս":"S","Վ":"V","Տ":"T","Ր":"R","Ց":"C","Փ":"P\'","Ք":"Q\'","Օ":"O\'\'","Ֆ":"F","և":"EV","ء":"a","آ":"aa","أ":"a","ؤ":"u","إ":"i","ئ":"e","ا":"a","ب":"b","ة":"h","ت":"t","ث":"th","ج":"j","ح":"h","خ":"kh","د":"d","ذ":"th","ر":"r","ز":"z","س":"s","ش":"sh","ص":"s","ض":"dh","ط":"t","ظ":"z","ع":"a","غ":"gh","ف":"f","ق":"q","ك":"k","ل":"l","م":"m","ن":"n","ه":"h","و":"w","ى":"a","ي":"y","ً":"an","ٌ":"on","ٍ":"en","َ":"a","ُ":"u","ِ":"e","ْ":"","٠":"0","١":"1","٢":"2","٣":"3","٤":"4","٥":"5","٦":"6","٧":"7","٨":"8","٩":"9","پ":"p","چ":"ch","ژ":"zh","ک":"k","گ":"g","ی":"y","۰":"0","۱":"1","۲":"2","۳":"3","۴":"4","۵":"5","۶":"6","۷":"7","۸":"8","۹":"9","฿":"baht","ა":"a","ბ":"b","გ":"g","დ":"d","ე":"e","ვ":"v","ზ":"z","თ":"t","ი":"i","კ":"k","ლ":"l","მ":"m","ნ":"n","ო":"o","პ":"p","ჟ":"zh","რ":"r","ს":"s","ტ":"t","უ":"u","ფ":"f","ქ":"k","ღ":"gh","ყ":"q","შ":"sh","ჩ":"ch","ც":"ts","ძ":"dz","წ":"ts","ჭ":"ch","ხ":"kh","ჯ":"j","ჰ":"h","Ṣ":"S","ṣ":"s","Ẁ":"W","ẁ":"w","Ẃ":"W","ẃ":"w","Ẅ":"W","ẅ":"w","ẞ":"SS","Ạ":"A","ạ":"a","Ả":"A","ả":"a","Ấ":"A","ấ":"a","Ầ":"A","ầ":"a","Ẩ":"A","ẩ":"a","Ẫ":"A","ẫ":"a","Ậ":"A","ậ":"a","Ắ":"A","ắ":"a","Ằ":"A","ằ":"a","Ẳ":"A","ẳ":"a","Ẵ":"A","ẵ":"a","Ặ":"A","ặ":"a","Ẹ":"E","ẹ":"e","Ẻ":"E","ẻ":"e","Ẽ":"E","ẽ":"e","Ế":"E","ế":"e","Ề":"E","ề":"e","Ể":"E","ể":"e","Ễ":"E","ễ":"e","Ệ":"E","ệ":"e","Ỉ":"I","ỉ":"i","Ị":"I","ị":"i","Ọ":"O","ọ":"o","Ỏ":"O","ỏ":"o","Ố":"O","ố":"o","Ồ":"O","ồ":"o","Ổ":"O","ổ":"o","Ỗ":"O","ỗ":"o","Ộ":"O","ộ":"o","Ớ":"O","ớ":"o","Ờ":"O","ờ":"o","Ở":"O","ở":"o","Ỡ":"O","ỡ":"o","Ợ":"O","ợ":"o","Ụ":"U","ụ":"u","Ủ":"U","ủ":"u","Ứ":"U","ứ":"u","Ừ":"U","ừ":"u","Ử":"U","ử":"u","Ữ":"U","ữ":"u","Ự":"U","ự":"u","Ỳ":"Y","ỳ":"y","Ỵ":"Y","ỵ":"y","Ỷ":"Y","ỷ":"y","Ỹ":"Y","ỹ":"y","–":"-","‘":"\'","’":"\'","“":"\\"","”":"\\"","„":"\\"","†":"+","•":"*","…":"...","₠":"ecu","₢":"cruzeiro","₣":"french franc","₤":"lira","₥":"mill","₦":"naira","₧":"peseta","₨":"rupee","₩":"won","₪":"new shequel","₫":"dong","€":"euro","₭":"kip","₮":"tugrik","₯":"drachma","₰":"penny","₱":"peso","₲":"guarani","₳":"austral","₴":"hryvnia","₵":"cedi","₸":"kazakhstani tenge","₹":"indian rupee","₺":"turkish lira","₽":"russian ruble","₿":"bitcoin","℠":"sm","™":"tm","∂":"d","∆":"delta","∑":"sum","∞":"infinity","♥":"love","元":"yuan","円":"yen","﷼":"rial","ﻵ":"laa","ﻷ":"laa","ﻹ":"lai","ﻻ":"la"}'),t=JSON.parse('{"bg":{"Й":"Y","Ц":"Ts","Щ":"Sht","Ъ":"A","Ь":"Y","й":"y","ц":"ts","щ":"sht","ъ":"a","ь":"y"},"de":{"Ä":"AE","ä":"ae","Ö":"OE","ö":"oe","Ü":"UE","ü":"ue","ß":"ss","%":"prozent","&":"und","|":"oder","∑":"summe","∞":"unendlich","♥":"liebe"},"es":{"%":"por ciento","&":"y","<":"menor que",">":"mayor que","|":"o","¢":"centavos","£":"libras","¤":"moneda","₣":"francos","∑":"suma","∞":"infinito","♥":"amor"},"fr":{"%":"pourcent","&":"et","<":"plus petit",">":"plus grand","|":"ou","¢":"centime","£":"livre","¤":"devise","₣":"franc","∑":"somme","∞":"infini","♥":"amour"},"pt":{"%":"porcento","&":"e","<":"menor",">":"maior","|":"ou","¢":"centavo","∑":"soma","£":"libra","∞":"infinito","♥":"amor"},"uk":{"И":"Y","и":"y","Й":"Y","й":"y","Ц":"Ts","ц":"ts","Х":"Kh","х":"kh","Щ":"Shch","щ":"shch","Г":"H","г":"h"},"vi":{"Đ":"D","đ":"d"},"da":{"Ø":"OE","ø":"oe","Å":"AA","å":"aa","%":"procent","&":"og","|":"eller","$":"dollar","<":"mindre end",">":"større end"},"nb":{"&":"og","Å":"AA","Æ":"AE","Ø":"OE","å":"aa","æ":"ae","ø":"oe"},"it":{"&":"e"},"nl":{"&":"en"},"sv":{"&":"och","Å":"AA","Ä":"AE","Ö":"OE","å":"aa","ä":"ae","ö":"oe"}}');function o(o,a){if("string"!=typeof o)throw new Error("slugify: string argument expected");var n=t[(a="string"==typeof a?{replacement:a}:a||{}).locale]||{},r=void 0===a.replacement?"-":a.replacement,s=void 0===a.trim||a.trim,i=o.normalize().split("").reduce((function(t,o){var s=n[o]||e[o]||o;return s===r&&(s=" "),t+s.replace(a.remove||/[^\w\s$*_+~.()'"!\-:@]+/g,"")}),"");return a.strict&&(i=i.replace(/[^A-Za-z0-9\s]/g,"")),s&&(i=i.trim()),i=i.replace(/\s+/g,r),a.lower&&(i=i.toLowerCase()),i}return o.extend=function(t){Object.assign(e,t)},o},e.exports=t(),e.exports.default=t()},363:e=>{"use strict";e.exports=React},192:e=>{"use strict";e.exports=wp.CodeMirror}},t={};function o(a){var n=t[a];if(void 0!==n)return n.exports;var r=t[a]={exports:{}};return e[a].call(r.exports,r,r.exports,o),r.exports}o.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return o.d(t,{a:t}),t},o.d=(e,t)=>{for(var a in t)o.o(t,a)&&!o.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},o.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),o.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{"use strict";const{createContext:e,useState:t}=wp.element,a=e(),n=({children:e,value:o})=>{const[n,r]=t(o);return React.createElement(a.Provider,{value:{settings:n,updateSettings:e=>r((t=>({...t,...e})))}},e)},r={slug:"",types:["post"],function_name:"your_prefix_register_taxonomy",text_domain:"your-textdomain",labels:{name:"",singular_name:"",menu_name:"",search_items:"",popular_items:"",all_items:"",parent_item:"",parent_item_colon:"",edit_item:"",view_item:"",update_item:"",add_new_item:"",new_item_name:"",separate_items_with_commas:"",add_or_remove_items:"",choose_from_most_used:"",not_found:"",no_terms:"",filter_by_item:"",items_list_navigation:"",items_list:"",most_used:"",back_to_items:""},description:"",public:!0,publicly_queryable:!0,hierarchical:!1,show_ui:!0,show_in_menu:!0,show_in_nav_menus:!0,meta_box_cb:"post_tags_meta_box",show_in_rest:!0,rest_base:"",show_tagcloud:!0,show_in_quick_edit:!0,show_admin_column:!1,rewrite:{slug:"",with_front:!1,hierarchical:!1},query_var:!0,sort:!1},s=wp.i18n;var i=o(517),l=o.n(i);const{useContext:c}=wp.element,p=({name:e,options:t,description:o})=>{const{settings:n,updateSettings:r}=c(a),s=l().get(n,e,[]),i=t=>{const{value:o,checked:a}=t.target;let n=[...s];a?n.push(o):n=n.filter((e=>e!==o)),r({[e]:n})};return React.createElement("div",{className:"mb-cpt-field"},React.createElement("div",{className:"mb-cpt-input"},o&&React.createElement("div",{className:"mb-cpt-description"},o),React.createElement("ul",{className:"mb-cpt-input-list"},Object.entries(t).map((([e,t])=>React.createElement("li",{key:e},React.createElement("label",null,React.createElement("input",{type:"checkbox",value:e,checked:s.includes(e),onChange:i}),t)))))))};var m=o(304),u=o.n(m);const{Tooltip:d,Dashicon:h}=wp.components,b=({content:e})=>React.createElement(d,{text:e},React.createElement("span",{className:"mb-cpt-tooltip-icon"},React.createElement(h,{icon:"editor-help"}))),_=({label:e,name:t,description:o,update:a,checked:n,required:r=!1,tooltip:s=""})=>React.createElement("div",{className:"mb-cpt-field"},React.createElement("label",{className:"mb-cpt-label",htmlFor:t},e,r&&React.createElement("span",{className:"mb-cpt-required"},"*"),s&&React.createElement(b,{id:t,content:s})),React.createElement("div",{className:"mb-cpt-input"},o?React.createElement("label",{className:"mb-cpt-description"},React.createElement("input",{type:"checkbox",id:t,name:t,checked:n,onChange:a})," ",o):React.createElement("input",{type:"checkbox",id:t,name:t,checked:n,onChange:a}))),y=wp.element,f=e=>{let t=e.replace(/-/g," ").trim();return["admin","controls","editor","format","image","media","welcome"].forEach((e=>{t.startsWith(e)&&(t=t.replace(e,""))})),["alt","alt2","alt3"].forEach((e=>{t.endsWith(e)&&(t=t.replace(e,`(${e})`))})),t=t.trim(),t={businessman:"business man",aligncenter:"align center",alignleft:"align left",alignright:"align right",customchar:"custom character",distractionfree:"distraction free",removeformatting:"remove formatting",strikethrough:"strike through",skipback:"skip back",skipforward:"skip forward",leftright:"left right",screenoptions:"screen options"}[t]||t,t.trim().toLowerCase()},g=({label:e,name:t,update:o,value:a,required:n=!1,tooltip:r=""})=>{const[s,i]=(0,y.useState)("");let l=MBCPT.icons.map((e=>[e,f(e)])).filter((e=>""===s||e[1].includes(s.toLowerCase())));return React.createElement("div",{className:"mb-cpt-field mb-cpt-field--radio"},React.createElement("label",{className:"mb-cpt-label",htmlFor:t},e,n&&React.createElement("span",{className:"mb-cpt-required"},"*"),r&&React.createElement(b,{id:t,content:r})),React.createElement("div",{className:"mb-cpt-input"},React.createElement("div",{className:"mb-cpt-icon-selected"},React.createElement("span",{className:`dashicons ${a}`}),React.createElement("input",{type:"text",className:"mb-cpt-search",placeholder:"Search...",value:s,onChange:e=>i(e.target.value)})),React.createElement("div",{className:"mb-cpt-items"},l.map((([e,n])=>React.createElement("div",{key:e,className:"mb-cpt-item"},React.createElement("label",{className:"mb-cpt-icon"},React.createElement("input",{type:"radio",name:t,value:`dashicons-${e}`,checked:`dashicons-${e}`===a,onChange:o}),React.createElement("span",{className:`dashicons dashicons-${e}`})),React.createElement("span",{className:"mb-cpt-item__text"},n)))))))},v=({label:e,name:t,update:o,value:a,required:n=!1,tooltip:r=""})=>React.createElement("div",{className:"mb-cpt-field"},React.createElement("label",{className:"mb-cpt-label",htmlFor:t},e,n&&React.createElement("span",{className:"mb-cpt-required"},"*"),r&&React.createElement(b,{id:t,content:r})),React.createElement("div",{className:"mb-cpt-input mb-cpt-icon-selected"},React.createElement("span",{className:`icon-fontawesome ${a}`}),React.createElement("input",{type:"text",name:t,value:a,onChange:o}))),x=({label:e,name:t,value:o,update:a,tooltip:n="",description:r="",required:s=!1})=>React.createElement("div",{className:"mb-cpt-field"},React.createElement("label",{className:"mb-cpt-label",htmlFor:t},e,s&&React.createElement("span",{className:"mb-cpt-required"},"*"),n&&React.createElement(b,{id:t,content:n})),React.createElement("div",{className:"mb-cpt-input"},React.createElement("input",{type:"text",required:s,id:t,name:t,value:o,onChange:a}),r&&React.createElement("div",{className:"mb-cpt-description"},React.createElement(y.RawHTML,null,r)))),E=({label:e,name:t,update:o,description:a="",options:n,value:r,required:s=!1,tooltip:i=""})=>React.createElement("div",{className:"mb-cpt-field"},React.createElement("label",{className:"mb-cpt-label",htmlFor:t},e,s&&React.createElement("span",{className:"mb-cpt-required"},"*"),i&&React.createElement(b,{id:t,content:i})),React.createElement("div",{className:"mb-cpt-input"},React.createElement("select",{id:t,name:t,value:r,onChange:o},n.map((e=>React.createElement("option",{key:e.value,value:e.value},e.label)))),a&&React.createElement("div",{className:"mb-cpt-description"},a))),w=({label:e,name:t,value:o,update:a,tooltip:n="",description:r="",required:i=!1})=>{const l=MBCPT.reservedTerms.includes(o)?(0,s.__)('ERROR: the slug must not be one of WordPress <a href="https://codex.wordpress.org/Reserved_Terms" target="_blank" rel="noopenner noreferrer">reserved terms</a>',"mb-custom-post-type"):null;return(0,y.useEffect)((()=>{document.querySelector("#publish").disabled=MBCPT.reservedTerms.includes(o)}),[o]),React.createElement("div",{className:"mb-cpt-field"},React.createElement("label",{className:"mb-cpt-label",htmlFor:t},e,i&&React.createElement("span",{className:"mb-cpt-required"},"*"),n&&React.createElement(b,{id:t,content:n})),React.createElement("div",{className:"mb-cpt-input"},React.createElement("input",{type:"text",required:i,id:t,name:t,value:o,onChange:a}),r&&React.createElement("div",{className:"mb-cpt-description"},r),l&&React.createElement(y.RawHTML,{className:"mb-cpt-error"},l)))},R=({label:e,name:t,placeholder:o,value:a,update:n,description:r="",required:s=!1,tooltip:i=""})=>React.createElement("div",{className:"mb-cpt-field"},React.createElement("label",{className:"mb-cpt-label",htmlFor:t},e,s&&React.createElement("span",{className:"mb-cpt-required"},"*"),i&&React.createElement(b,{id:t,content:i})),React.createElement("div",{className:"mb-cpt-input"},React.createElement("textarea",{id:t,name:t,placeholder:o,value:a,onChange:n}),r&&React.createElement("div",{className:"mb-cpt-description"},r)));function k(){return k=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var o=arguments[t];for(var a in o)Object.prototype.hasOwnProperty.call(o,a)&&(e[a]=o[a])}return e},k.apply(this,arguments)}const{useContext:C}=wp.element,N=e=>("true"===e?e=!0:"false"===e&&(e=!1),e),S=({field:e,autoFills:t=[]})=>{const{settings:o,updateSettings:n}=C(a),r=e=>{const a=e.target.name;let r="checkbox"===e.target.type?l().get(e.target,"checked",!1):e.target.value;r=N(r),r="menu_position"===a?parseInt(r)||"":r;let s={...o};l().set(s,a,r),((e,o,a)=>{const n=o.replace("labels.","");t.forEach((t=>{let o;var r;o="slug"===t.name?u()(a,{lower:!0}):(r=t.default.replace(`%${n}%`,a).replace(`%${n}_lowercase%`,a.toLowerCase())).length?r[0].toUpperCase()+r.slice(1):r,l().set(e,t.name,o)}))})(s,a,r),n(s)},s=l().get(o,e.name,e.default||"");if(!(e=>{const{dependency:t}=e;if(!t)return!0;const a=t.match(/([^:]+):([^:\s]+)/),n=a[1];return N(a[2])===l().get(o,n)})(e))return"";switch(e.type){case"text":return React.createElement(x,k({},e,{value:s,update:r}));case"textarea":return React.createElement(R,k({},e,{value:s,update:r}));case"checkbox":return React.createElement(_,k({},e,{checked:s,update:r}));case"icon":return React.createElement(g,k({},e,{value:s,update:r}));case"fontawesome":return React.createElement(v,k({},e,{value:s,update:r}));case"select":return React.createElement(E,k({},e,{value:s,update:r}));case"slug":return React.createElement(w,k({},e,{value:s,update:r}))}},O=[{type:"text",name:"labels.name",label:(0,s.__)("Plural name","mb-custom-post-type"),required:!0,tooltip:(0,s.__)("General name for the taxonomy, usually plural","mb-custom-post-type")},{type:"text",name:"labels.singular_name",label:(0,s.__)("Singular name","mb-custom-post-type"),required:!0,tooltip:(0,s.__)("Name for one object of this taxonomy","mb-custom-post-type")},{type:"slug",name:"slug",label:(0,s.__)("Slug","mb-custom-post-type"),required:!0,updateFrom:"labels.singular_name",tooltip:(0,s.__)("Taxonomy key, must not exceed 32 characters and may only contain lowercase alphanumeric characters, dashes, and underscores","mb-custom-post-type")}],D=[{type:"text",name:"function_name",label:(0,s.__)("Function name","mb-custom-post-type"),tooltip:(0,s.__)("Your function name that registers the taxonomy","mb-custom-post-type")},{type:"text",name:"text_domain",label:(0,s.__)("Text domain","mb-custom-post-type"),tooltip:(0,s.__)("Required for multilingual website. Used in the exported code only.","mb-custom-post-type")}],A=[{type:"text",name:"labels.search_items",label:(0,s.__)("Search items","mb-custom-post-type"),default:(0,s.__)("Search %name%","mb-custom-post-type"),updateFrom:"labels.name",tooltip:(0,s.__)("Label for searching items","mb-custom-post-type")},{type:"text",name:"labels.popular_items",label:(0,s.__)("Popular items","mb-custom-post-type"),default:(0,s.__)("Popular %name%","mb-custom-post-type"),updateFrom:"labels.name",tooltip:(0,s.__)("Label for most popular items, only used for non-hierarchical taxonomies","mb-custom-post-type")},{type:"text",name:"labels.all_items",label:(0,s.__)("All items","mb-custom-post-type"),default:(0,s.__)("All %name%","mb-custom-post-type"),updateFrom:"labels.name",tooltip:(0,s.__)("Label to signify all items in a submenu link","mb-custom-post-type")},{type:"text",name:"labels.parent_item",label:(0,s.__)("Parent item","mb-custom-post-type"),default:(0,s.__)("Parent %singular_name%","mb-custom-post-type"),updateFrom:"labels.singular_name",tooltip:(0,s.__)("Label for parent item, only used for hierarchical taxonomies","mb-custom-post-type")},{type:"text",name:"labels.parent_item_colon",label:(0,s.__)("Parent item colon","mb-custom-post-type"),default:(0,s.__)("Parent %singular_name%:","mb-custom-post-type"),updateFrom:"labels.singular_name",tooltip:(0,s.__)("The same as parent item, but with colon : in the end","mb-custom-post-type")},{type:"text",name:"labels.edit_item",label:(0,s.__)("Edit item","mb-custom-post-type"),default:(0,s.__)("Edit %singular_name%","mb-custom-post-type"),updateFrom:"labels.singular_name",tooltip:(0,s.__)("Label for adding a new singular item","mb-custom-post-type")},{type:"text",name:"labels.view_item",label:(0,s.__)("View item","mb-custom-post-type"),default:(0,s.__)("View %singular_name%","mb-custom-post-type"),updateFrom:"labels.singular_name",tooltip:(0,s.__)("Label for viewing a singular item","mb-custom-post-type")},{type:"text",name:"labels.update_item",label:(0,s.__)("Update item","mb-custom-post-type"),default:(0,s.__)("Update %singular_name%","mb-custom-post-type"),updateFrom:"labels.singular_name",tooltip:(0,s.__)("Label for updating a singular item","mb-custom-post-type")},{type:"text",name:"labels.add_new_item",label:(0,s.__)("Add new item","mb-custom-post-type"),default:(0,s.__)("Add New %singular_name%","mb-custom-post-type"),updateFrom:"labels.singular_name",tooltip:(0,s.__)("Label for adding a new singular item","mb-custom-post-type")},{type:"text",name:"labels.new_item_name",label:(0,s.__)("New item name","mb-custom-post-type"),default:(0,s.__)("New %singular_name% Name","mb-custom-post-type"),updateFrom:"labels.singular_name",tooltip:(0,s.__)("Label for new item name","mb-custom-post-type")},{type:"text",name:"labels.separate_items_with_commas",label:(0,s.__)("Separate items with commas","mb-custom-post-type"),default:(0,s.__)("Separate %name_lowercase% with commas","mb-custom-post-type"),updateFrom:"labels.name",tooltip:(0,s.__)('This label is only used for non-hierarchical taxonomies. Default "Separate tags with commas", used in the meta box',"mb-custom-post-type")},{type:"text",name:"labels.add_or_remove_items",label:(0,s.__)("Add or remove items","mb-custom-post-type"),default:(0,s.__)("Add or remove %name_lowercase%","mb-custom-post-type"),updateFrom:"labels.name",tooltip:(0,s.__)('This label is only used for non-hierarchical taxonomies. Default "Add or remove tags", used in the meta box when JavaScript is disabled',"mb-custom-post-type")},{type:"text",name:"labels.choose_from_most_used",label:(0,s.__)("Choose from most used","mb-custom-post-type"),default:(0,s.__)("Choose most used %name_lowercase%","mb-custom-post-type"),updateFrom:"labels.name",tooltip:(0,s.__)('This label is only used on non-hierarchical taxonomies. Default "Choose from the most used tags", used in the meta box',"mb-custom-post-type")},{type:"text",name:"labels.not_found",label:(0,s.__)("Not found","mb-custom-post-type"),default:(0,s.__)("No %name_lowercase% found.","mb-custom-post-type"),updateFrom:"labels.name",tooltip:(0,s.__)("Label used in the meta box and taxonomy list table","mb-custom-post-type")},{type:"text",name:"labels.no_terms",label:(0,s.__)("No terms","mb-custom-post-type"),default:(0,s.__)("No %name_lowercase%","mb-custom-post-type"),updateFrom:"labels.name",tooltip:(0,s.__)("Label used in the posts and media list tables","mb-custom-post-type")},{type:"text",name:"labels.filter_by_item",label:(0,s.__)("Filter by","mb-custom-post-type"),default:(0,s.__)("Filter by %singular_name_lowercase%","mb-custom-post-type"),updateFrom:"labels.singular_name",tooltip:(0,s.__)("This label is only used for hierarchical taxonomies, used in the posts list table","mb-custom-post-type")},{type:"text",name:"labels.items_list_navigation",label:(0,s.__)("Table pagination hidden heading","mb-custom-post-type"),default:(0,s.__)("%name% list pagination","mb-custom-post-type"),updateFrom:"labels.name",tooltip:(0,s.__)("Label for the table pagination hidden heading","mb-custom-post-type")},{type:"text",name:"labels.items_list",label:(0,s.__)("Table hidden heading","mb-custom-post-type"),default:(0,s.__)("%name% list","mb-custom-post-type"),updateFrom:"labels.name",tooltip:(0,s.__)("Label for the table hidden heading","mb-custom-post-type")},{type:"text",name:"labels.most_used",label:(0,s.__)("Most used tab","mb-custom-post-type"),default:(0,s.__)("Most Used","mb-custom-post-type"),updateFrom:"labels.name",tooltip:(0,s.__)("Title for the Most Used tab","mb-custom-post-type")},{type:"text",name:"labels.back_to_items",label:(0,s.__)("Back to items","mb-custom-post-type"),default:(0,s.__)("&larr; Go to %name%","mb-custom-post-type"),updateFrom:"labels.name",tooltip:(0,s.__)("Label displayed after a term has been updated","mb-custom-post-type")},{type:"text",name:"labels.menu_name",label:(0,s.__)("Menu name","mb-custom-post-type"),default:(0,s.__)("%name%","mb-custom-post-type"),updateFrom:"labels.name",tooltip:(0,s.__)("Label for the tab in the admin menu","mb-custom-post-type")}],U=[{type:"textarea",name:"description",label:(0,s.__)("Description","mb-custom-post-type"),description:(0,s.__)("A short descriptive summary of what the taxonomy is for.","mb-custom-post-type"),tooltip:(0,s.__)("A short descriptive summary of what the taxonomy is for","mb-custom-post-type")},{type:"checkbox",name:"public",label:(0,s.__)("Public","mb-custom-post-type"),description:(0,s.__)("Whether a taxonomy is intended for use publicly either via the admin interface or by front-end users.","mb-custom-post-type"),tooltip:(0,s.__)("Whether a taxonomy is intended for use publicly either via the admin interface or by front-end users","mb-custom-post-type")},{type:"checkbox",name:"publicly_queryable",label:(0,s.__)("Public queryable","mb-custom-post-type"),description:(0,s.__)("Whether the taxonomy is publicly queryable.","mb-custom-post-type"),tooltip:(0,s.__)("Whether the taxonomy is publicly queryable","mb-custom-post-type")},{type:"checkbox",name:"hierarchical",label:(0,s.__)("Hierarchical","mb-custom-post-type"),description:(0,s.__)("Whether the taxonomy is hierarchical.","mb-custom-post-type"),tooltip:(0,s.__)("Whether the taxonomy is hierarchical","mb-custom-post-type")},{type:"checkbox",name:"show_ui",label:(0,s.__)("Show UI","mb-custom-post-type"),description:(0,s.__)("Whether to generate and allow a UI for managing terms in this taxonomy in the admin.","mb-custom-post-type"),tooltip:(0,s.__)("Whether to generate and allow a UI for managing terms in this taxonomy in the admin","mb-custom-post-type")},{type:"checkbox",name:"show_in_menu",label:(0,s.__)("Show in menu","mb-custom-post-type"),description:(0,s.__)("Whether to show the taxonomy in the admin menu.","mb-custom-post-type"),tooltip:(0,s.__)("Whether to show the taxonomy in the admin menu. If true, the taxonomy is shown as a submenu of the object type menu. If false, no menu is shown. The show UI settings must be true","mb-custom-post-type")},{type:"checkbox",name:"show_in_nav_menus",label:(0,s.__)("Show in nav menus","mb-custom-post-type"),description:(0,s.__)("Makes this taxonomy available for selection in navigation menus.","mb-custom-post-type"),tooltip:(0,s.__)("Makes this taxonomy available for selection in navigation menus","mb-custom-post-type")},{type:"checkbox",name:"meta_box_cb",label:(0,s.__)("Show on edit page","mb-custom-post-type"),description:(0,s.__)("Whether to show the taxonomy on the edit page.","mb-custom-post-type"),tooltip:(0,s.__)("Whether to show the taxonomy meta box on the edit page","mb-custom-post-type")},{type:"checkbox",name:"show_in_rest",label:(0,s.__)("Show in REST","mb-custom-post-type"),description:(0,s.__)("Whether to include the taxonomy in the REST API. Must be true to enable the Gutenberg editor.","mb-custom-post-type"),tooltip:(0,s.__)("Whether to include the taxonomy in the REST API. Set this to true for the taxonomy to be available in the block editor","mb-custom-post-type")},{type:"text",name:"rest_base",label:(0,s.__)("REST API base slug","mb-custom-post-type"),description:(0,s.__)("The base URL of the REST API route. Leave empty to use the taxonomy slug.","mb-custom-post-type"),tooltip:(0,s.__)("To change the base URL of REST API route","mb-custom-post-type")},{type:"checkbox",name:"show_tagcloud",label:(0,s.__)("Show tag cloud","mb-custom-post-type"),description:(0,s.__)("Whether to list the taxonomy in the Tag Cloud Widget controls.","mb-custom-post-type"),tooltip:(0,s.__)("Whether to list the taxonomy in the Tag Cloud Widget controls","mb-custom-post-type")},{type:"checkbox",name:"show_in_quick_edit",label:(0,s.__)("Show in quick edit","mb-custom-post-type"),description:(0,s.__)("Whether to show the taxonomy in the quick/bulk edit panel.","mb-custom-post-type"),tooltip:(0,s.__)("Whether to show the taxonomy in the quick/bulk edit panel","mb-custom-post-type")},{type:"checkbox",name:"show_admin_column",label:(0,s.__)("Show admin column","mb-custom-post-type"),description:(0,s.__)("Whether to display a column for the taxonomy on its post type listing screens.","mb-custom-post-type"),tooltip:(0,s.__)("Whether to display a column for the taxonomy on its post type listing screens","mb-custom-post-type")},{type:"text",name:"rewrite.slug",label:(0,s.__)("Custom rewrite slug","mb-custom-post-type"),description:(0,s.__)("Leave empty to use the taxonomy slug.","mb-custom-post-type"),tooltip:(0,s.__)("Customize the permastruct slug","mb-custom-post-type")},{type:"checkbox",name:"rewrite.with_front",label:(0,s.__)("Prepended permalink structure","mb-custom-post-type"),description:(0,s.__)("Example: if your permalink structure is /blog/, then your links will be: false -> /news/, true -> /blog/news/.","mb-custom-post-type"),tooltip:(0,s.__)("Should the permastruct be prepended","mb-custom-post-type")},{type:"checkbox",name:"rewrite.hierarchical",label:(0,s.__)("Hierarchical URL","mb-custom-post-type"),description:(0,s.__)("Either hierarchical rewrite tag or not","mb-custom-post-type"),tooltip:(0,s.__)("Either hierarchical rewrite tag or not","mb-custom-post-type")},{type:"checkbox",name:"query_var",label:(0,s.__)("Query var","mb-custom-post-type"),description:(0,s.__)('Uncheck to disable the query var, check to use the taxonomy\'s "name" as query var.',"mb-custom-post-type"),tooltip:(0,s.__)("Sets the query var key (taxonomy slug) for this taxonomy","mb-custom-post-type")},{type:"checkbox",name:"sort",label:(0,s.__)("Sort","mb-custom-post-type"),description:(0,s.__)("Whether this taxonomy should remember the order in which terms are added to objects.","mb-custom-post-type"),tooltip:(0,s.__)("Whether terms in this taxonomy should be sorted","mb-custom-post-type")}];var T=o(656);const q=(e,t)=>{return" ".repeat((o=e,Math.max.apply(null,Object.keys(o).map((e=>e.length)))-t.length));var o},L=(e,t)=>{let o=l().get(e,t,"").replace(/\\/g,"\\\\");return o=o.replace(/\'/g,"\\'"),o},P=(e,t)=>`'${t}'${q(e,t)} => '${L(e,t)}'`,F=(e,t)=>`'${t}'${q(e,t)} => esc_html__( '${L(e,t)}', '${e.text_domain}' )`,M=(e,t)=>{let o=l().get(e,t);return["",void 0].includes(o)&&(o="''"),`'${t}'${q(e,t)} => ${o}`},$=e=>`<?php\nadd_action( 'init', '${e.function_name}' );\nfunction ${e.function_name}() {\n\t$labels = [\n\t\t${(e=>{const{labels:t}=e;let o=Object.keys(t);return t.text_domain=l().get(e,"text_domain","your-textdomain"),o.map((e=>F(t,e))).join(",\n\t\t")})(e)},\n\t];\n\t$args = [\n\t\t${F(e,"label")},\n\t\t'labels'${q(e,"labels")} => $labels,\n\t\t${P(e,"description")},\n\t\t${(e=>{const t=["slug","types","function_name","text_domain","label","labels","description","rest_base","rewrite","meta_box_cb"];return Object.keys(e).filter((e=>!t.includes(e))).map((t=>M(e,t))).join(",\n\t\t")})(e)},\n\t\t${(e=>{let t=e.meta_box_cb?`'${e.meta_box_cb}'`:e.meta_box_cb;return t&&(t=e.hierarchical?"'post_categories_meta_box'":"'post_tags_meta_box'"),`'meta_box_cb'${q(e,"meta_box_cb")} => ${t}`})(e)},\n\t\t${P(e,"rest_base")},\n\t\t${(e=>{let t=[];return e.rewrite.slug&&t.push(P(e.rewrite,"slug")),t.push(M(e.rewrite,"with_front")),t.push(M(e.rewrite,"hierarchical")),`'rewrite'${q(e,"rewrite")} => [\n\t\t\t${t.join(",\n\t\t\t")},\n\t\t]`})(e)},\n\t];\n\tregister_taxonomy( '${e.slug.replace(/\\/g,"\\\\").replace(/\'/g,"\\'")}', ${(e=>{let t=l().get(e,"types",[]);return Array.isArray(t)||(t=[t]),t.length?`['${t.join("', '")}']`:"[]"})(e)}, $args );\n}`,{useContext:j}=wp.element,{ClipboardButton:W}=wp.components,{withState:I}=wp.compose,H=()=>{const{settings:e}=j(a),t=I({hasCopied:!1})((({hasCopied:t,setState:o})=>React.createElement(W,{className:"button",text:$(e),onCopy:()=>o({hasCopied:!0}),onFinishCopy:()=>o({hasCopied:!1})},t?(0,s.__)("Copied!","meta-box-builder"):(0,s.__)("Copy","meta-box-builder"))));return React.createElement("div",{className:"mb-cpt-result"},React.createElement("p",null,(0,s.__)("Copy and paste the following code into your theme's functions.php file.","mb-custom-post-type")),React.createElement("div",{className:"mb-cpt-result__body"},React.createElement(T.Rt,{value:$(e),options:{mode:"php",lineNumbers:!0}}),React.createElement(t,null)))},{useContext:Y}=wp.element,{TabPanel:B}=wp.components,z=[{name:"general",title:(0,s.__)("General","mb-custom-post-type")},{name:"labels",title:(0,s.__)("Labels","mb-custom-post-type")},{name:"advanced",title:(0,s.__)("Advanced","mb-custom-post-type")},{name:"types",title:(0,s.__)("Post Types","mb-custom-post-type")},{name:"code",title:(0,s.__)("Get PHP Code","mb-custom-post-type"),className:"mb-cpt-code button button-small"}];let V=[...A,...O];V.push({name:"label",default:"%name%",updateFrom:"labels.name"});const G={general:O.map(((e,t)=>React.createElement(S,{key:t,field:e,autoFills:V.filter((t=>t.updateFrom===e.name))}))),labels:A.map(((e,t)=>React.createElement(S,{key:t,field:e}))),advanced:U.map(((e,t)=>React.createElement(S,{key:t,field:e}))),types:React.createElement(p,{name:"types",options:MBCPT.types,description:(0,s.__)("Post types for the taxonomy:","mb-custom-post-type")}),code:React.createElement(React.Fragment,null,D.map(((e,t)=>React.createElement(S,{key:t,field:e}))),React.createElement(H,null))},J=()=>{const{settings:e}=Y(a);return React.createElement(React.Fragment,null,React.createElement(B,{className:"mb-cpt-tabs",tabs:z},(e=>G[e.name])),React.createElement("input",{type:"hidden",name:"post_title",value:e.labels.singular_name}),React.createElement("input",{type:"hidden",name:"content",value:JSON.stringify(e)}))},{render:K}=wp.element,Z=()=>React.createElement(n,{value:MBCPT.settings?MBCPT.settings:r},React.createElement(J,null));K(React.createElement(Z,null),document.getElementById("root"))})()})();